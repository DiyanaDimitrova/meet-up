{"remainingRequest":"/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diyana.dimitrova/learning/meet-up/src/components/MeetUp/Registration/RegisterDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diyana.dimitrova/learning/meet-up/src/components/MeetUp/Registration/RegisterDialog.vue","mtime":1563301612275},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['meetupId'],\n  data () {\n    return {\n      registerDialog: false\n    }\n  },\n  computed: {\n    userIsRegistered () {\n      return this.$store.getters.user.registeredMeetups.findIndex(meetupId => {\n        return meetupId === this.meetupId\n      }) >= 0\n    }\n  },\n  methods: {\n    onAgree () {\n      if (this.userIsRegistered) {\n        this.$store.dispatch('unregisterUserForMeetup', this.meetupId)\n      } else {\n        this.$store.dispatch('registerUserForMeetup', this.meetupId)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["RegisterDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterDialog.vue","sourceRoot":"src/components/MeetUp/Registration","sourcesContent":["<template>\n  <v-dialog persistent v-model=\"registerDialog\">\n      <v-btn primary accent slot=\"activator\">\n          {{ userIsRegistered ? 'Unregister' : 'Register'}}\n      </v-btn>\n      <v-card>\n          <v-container>\n            <v-layout>\n                <v-flex xs12>\n                    <v-card-title v-if=\"userIsRegistered\">Unregister from Meetup?</v-card-title>\n                    <v-card-title v-else>Register from Meetup?</v-card-title>\n                </v-flex>\n            </v-layout>\n            <v-divider></v-divider>\n            <v-layout row wrap>\n                <v-flex xs12>\n                    <v-card-text>\n                        You can always change your decision later on.\n                    </v-card-text>\n                </v-flex>\n            </v-layout>\n            <v-layout row wrap>\n                <v-flex xs12>\n                <v-card-actions>\n                    <v-btn flat class=\"red--text darken-1\" @click=\"registerDialog=false\">Cancel</v-btn>\n                    <v-btn flat class=\"green--text darken-1\" @click=\"onAgree\">Confirm</v-btn>\n                </v-card-actions>\n                </v-flex>\n            </v-layout>\n          </v-container>\n      </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: ['meetupId'],\n  data () {\n    return {\n      registerDialog: false\n    }\n  },\n  computed: {\n    userIsRegistered () {\n      return this.$store.getters.user.registeredMeetups.findIndex(meetupId => {\n        return meetupId === this.meetupId\n      }) >= 0\n    }\n  },\n  methods: {\n    onAgree () {\n      if (this.userIsRegistered) {\n        this.$store.dispatch('unregisterUserForMeetup', this.meetupId)\n      } else {\n        this.$store.dispatch('registerUserForMeetup', this.meetupId)\n      }\n    }\n  }\n}\n</script>\n"]}]}