{"remainingRequest":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js!/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diyana.dimitrova/learning/meet-up/src/components/MeetUp/Registration/RegisterDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diyana.dimitrova/learning/meet-up/src/components/MeetUp/Registration/RegisterDialog.vue","mtime":1564345903213},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['meetupId'],\n  data: function data() {\n    return {\n      registerDialog: false\n    };\n  },\n  computed: {\n    userIsRegistered: function userIsRegistered() {\n      var _this = this;\n\n      return this.$store.getters.user.registeredMeetups.findIndex(function (meetupId) {\n        return meetupId === _this.meetupId;\n      }) >= 0;\n    }\n  },\n  methods: {\n    onAgree: function onAgree() {\n      if (this.userIsRegistered) {\n        this.$store.dispatch('unregisterUserForMeetup', this.meetupId);\n      } else {\n        this.$store.dispatch('registerUserForMeetup', this.meetupId);\n      }\n    }\n  }\n};",{"version":3,"sources":["RegisterDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,QAAA,EAAA;AACA,eAAA,QAAA,KAAA,KAAA,CAAA,QAAA;AACA,OAFA,KAEA,CAFA;AAGA;AALA,GAPA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,KAAA,gBAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,yBAAA,EAAA,KAAA,QAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,KAAA,QAAA;AACA;AACA;AAPA;AAdA,CAAA","sourcesContent":["<template>\n  <v-dialog persistent v-model=\"registerDialog\">\n      <v-btn color=\"primary\" accent slot=\"activator\">\n          {{ userIsRegistered ? 'Unregister' : 'Register'}}\n      </v-btn>\n      <v-card>\n          <v-container>\n            <v-layout>\n                <v-flex xs12>\n                    <v-card-title v-if=\"userIsRegistered\">Unregister from Meetup?</v-card-title>\n                    <v-card-title v-else>Register from Meetup?</v-card-title>\n                </v-flex>\n            </v-layout>\n            <v-divider></v-divider>\n            <v-layout row wrap>\n                <v-flex xs12>\n                    <v-card-text>\n                        You can always change your decision later on.\n                    </v-card-text>\n                </v-flex>\n            </v-layout>\n            <v-layout row wrap>\n                <v-flex xs12>\n                <v-card-actions>\n                    <v-btn flat class=\"red--text darken-1\" @click=\"registerDialog=false\">Cancel</v-btn>\n                    <v-btn flat class=\"green--text darken-1\" @click=\"onAgree\">Confirm</v-btn>\n                </v-card-actions>\n                </v-flex>\n            </v-layout>\n          </v-container>\n      </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  props: ['meetupId'],\n  data () {\n    return {\n      registerDialog: false\n    }\n  },\n  computed: {\n    userIsRegistered () {\n      return this.$store.getters.user.registeredMeetups.findIndex(meetupId => {\n        return meetupId === this.meetupId\n      }) >= 0\n    }\n  },\n  methods: {\n    onAgree () {\n      if (this.userIsRegistered) {\n        this.$store.dispatch('unregisterUserForMeetup', this.meetupId)\n      } else {\n        this.$store.dispatch('registerUserForMeetup', this.meetupId)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/MeetUp/Registration"}]}