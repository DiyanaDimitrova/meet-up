{"remainingRequest":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js!/Users/diyana.dimitrova/learning/meet-up/node_modules/eslint-loader/index.js??ref--13-0!/Users/diyana.dimitrova/learning/meet-up/src/store/meetup/index.js","dependencies":[{"path":"/Users/diyana.dimitrova/learning/meet-up/src/store/meetup/index.js","mtime":1563306436758},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"/Users/diyana.dimitrova/learning/meet-up/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.date.to-iso-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { if (i % 2) { var source = arguments[i] != null ? arguments[i] : {}; ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i])); } else { ownKeys(arguments[i]).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(arguments[i], key)); }); } } return target; }\n\nimport * as firebase from 'firebase';\nexport default {\n  state: {\n    loadedMeetups: [{\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/4/47/New_york_times_square-terabass.jpg',\n      id: 'afajfjadfaadfa323',\n      title: 'Meetup in New York',\n      date: new Date(),\n      location: 'New York',\n      description: 'New York, New York!'\n    }, {\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/7/7a/Paris_-_Blick_vom_gro%C3%9Fen_Triumphbogen.jpg',\n      id: 'aadsfhbkhlk1241',\n      title: 'Meetup in Paris',\n      date: new Date(),\n      location: 'Paris',\n      description: 'It\\'s Paris!'\n    }]\n  },\n  mutations: {\n    setLoadedMeetups: function setLoadedMeetups(state, payload) {\n      state.loadedMeetups = payload;\n    },\n    createMeetup: function createMeetup(state, payload) {\n      state.loadedMeetups.push(payload);\n    },\n    updateMeetup: function updateMeetup(state, payload) {\n      var meetup = state.loadedMeetups.find(function (meetup) {\n        return meetup.id === payload.id;\n      });\n\n      if (payload.title) {\n        meetup.title = payload.title;\n      }\n\n      if (payload.description) {\n        meetup.description = payload.description;\n      }\n\n      if (payload.date) {\n        meetup.date = payload.date;\n      }\n    },\n    deleteMeetup: function deleteMeetup(state, payload) {\n      var meetup = state.loadedMeetups.findIndex(function (meetup) {\n        return meetup.id === payload;\n      });\n      state.loadedMeetups.splice(meetup, 1);\n    }\n  },\n  actions: {\n    loadMeetups: function loadMeetups(_ref) {\n      var commit = _ref.commit;\n      commit('setLoading', true);\n      firebase.database().ref('meetups').once('value').then(function (data) {\n        var meetups = [];\n        var obj = data.val();\n\n        for (var key in obj) {\n          meetups.push({\n            id: key,\n            title: obj[key].title,\n            description: obj[key].description,\n            imageUrl: obj[key].imageUrl,\n            date: obj[key].date,\n            location: obj[key].location,\n            creatorId: obj[key].creatorId\n          });\n        }\n\n        commit('setLoadedMeetups', meetups);\n        commit('setLoading', false);\n      }).catch(function (error) {\n        console.log(error);\n        commit('setLoading', false);\n      });\n    },\n    createMeetup: function createMeetup(_ref2, payload) {\n      var commit = _ref2.commit,\n          getters = _ref2.getters;\n      var meetup = {\n        title: payload.title,\n        location: payload.location,\n        description: payload.description,\n        date: payload.date.toISOString(),\n        creatorId: getters.user.id\n      };\n      var imageUrl;\n      var key;\n      firebase.database().ref('meetups').push(meetup).then(function (data) {\n        key = data.key;\n        return key;\n      }).then(function (key) {\n        var filename = payload.image.name;\n        var ext = filename.slice(filename.lastIndexOf('.'));\n        return firebase.storage().ref('meetups/' + key + '.' + ext).put(payload.image);\n      }).then(function (fileData) {\n        return fileData.ref.getDownloadURL().then(function (_imageUrl) {\n          imageUrl = _imageUrl;\n          return imageUrl;\n        });\n      }).then(function (imageUrl) {\n        return firebase.database().ref('meetups').child(key).update({\n          imageUrl: imageUrl\n        });\n      }).then(function () {\n        commit('createMeetup', _objectSpread({}, meetup, {\n          imageUrl: imageUrl,\n          id: key\n        }));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    updateMeetup: function updateMeetup(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit('setLoading', true);\n      var updateObj = {};\n\n      if (payload.title) {\n        updateObj.title = payload.title;\n      }\n\n      if (payload.description) {\n        updateObj.description = payload.description;\n      }\n\n      if (payload.date) {\n        updateObj.date = payload.date;\n      }\n\n      firebase.database().ref('meetups').child(payload.id).update(updateObj).then(function () {\n        commit('setLoading', false);\n        commit('updateMeetup', payload);\n      }).catch(function (error) {\n        console.log(error);\n        commit('setLoading', false);\n      });\n    },\n    deleteMeetup: function deleteMeetup(_ref4, payload) {\n      var commit = _ref4.commit;\n      commit('setLoading', true);\n      firebase.database().ref('meetups').child(payload).remove().then(function () {\n        commit('setLoading', false);\n        commit('deleteMeetup', payload);\n      }).catch(function (error) {\n        console.log(error);\n        commit('setLoading', false);\n      });\n    }\n  },\n  getters: {\n    loadedMeetups: function loadedMeetups(state) {\n      return state.loadedMeetups.sort(function (meetupA, meetupB) {\n        return meetupA.date > meetupB.date;\n      });\n    },\n    featuredMeetups: function featuredMeetups(state, getters) {\n      return getters.loadedMeetups.slice(0, 5);\n    },\n    loadedMeetup: function loadedMeetup(state) {\n      return function (meetupId) {\n        return state.loadedMeetups.find(function (meetup) {\n          return meetup.id === meetupId;\n        });\n      };\n    }\n  }\n};",{"version":3,"sources":["/Users/diyana.dimitrova/learning/meet-up/src/store/meetup/index.js"],"names":["firebase","state","loadedMeetups","imageUrl","id","title","date","Date","location","description","mutations","setLoadedMeetups","payload","createMeetup","push","updateMeetup","meetup","find","deleteMeetup","findIndex","splice","actions","loadMeetups","commit","database","ref","once","then","data","meetups","obj","val","key","creatorId","catch","error","console","log","getters","toISOString","user","filename","image","name","ext","slice","lastIndexOf","storage","put","fileData","getDownloadURL","_imageUrl","child","update","updateObj","remove","sort","meetupA","meetupB","featuredMeetups","loadedMeetup","meetupId"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase'\n\nexport default {\n  state: {\n    loadedMeetups: [\n      {\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/4/47/New_york_times_square-terabass.jpg',\n        id: 'afajfjadfaadfa323',\n        title: 'Meetup in New York',\n        date: new Date(),\n        location: 'New York',\n        description: 'New York, New York!'\n      },\n      {\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/7/7a/Paris_-_Blick_vom_gro%C3%9Fen_Triumphbogen.jpg',\n        id: 'aadsfhbkhlk1241',\n        title: 'Meetup in Paris',\n        date: new Date(),\n        location: 'Paris',\n        description: 'It\\'s Paris!'\n      }\n    ]\n  },\n  mutations: {\n    setLoadedMeetups (state, payload) {\n      state.loadedMeetups = payload\n    },\n    createMeetup (state, payload) {\n      state.loadedMeetups.push(payload)\n    },\n    updateMeetup (state, payload) {\n      const meetup = state.loadedMeetups.find(meetup => {\n        return meetup.id === payload.id\n      })\n      if (payload.title) {\n        meetup.title = payload.title\n      }\n      if (payload.description) {\n        meetup.description = payload.description\n      }\n      if (payload.date) {\n        meetup.date = payload.date\n      }\n    },\n    deleteMeetup (state, payload) {\n      const meetup = state.loadedMeetups.findIndex(meetup => {\n        return meetup.id === payload\n      })\n      state.loadedMeetups.splice(meetup, 1)\n    }\n  },\n  actions: {\n    loadMeetups ({ commit }) {\n      commit('setLoading', true)\n      firebase.database().ref('meetups').once('value')\n        .then((data) => {\n          const meetups = []\n          const obj = data.val()\n          for (let key in obj) {\n            meetups.push({\n              id: key,\n              title: obj[key].title,\n              description: obj[key].description,\n              imageUrl: obj[key].imageUrl,\n              date: obj[key].date,\n              location: obj[key].location,\n              creatorId: obj[key].creatorId\n            })\n          }\n          commit('setLoadedMeetups', meetups)\n          commit('setLoading', false)\n        })\n        .catch(\n          (error) => {\n            console.log(error)\n            commit('setLoading', false)\n          }\n        )\n    },\n    createMeetup ({ commit, getters }, payload) {\n      const meetup = {\n        title: payload.title,\n        location: payload.location,\n        description: payload.description,\n        date: payload.date.toISOString(),\n        creatorId: getters.user.id\n      }\n      let imageUrl\n      let key\n      firebase.database().ref('meetups').push(meetup)\n        .then((data) => {\n          key = data.key\n          return key\n        })\n        .then(key => {\n          const filename = payload.image.name\n          const ext = filename.slice(filename.lastIndexOf('.'))\n          return firebase.storage().ref('meetups/' + key + '.' + ext).put(payload.image)\n        })\n        .then(fileData => {\n          return fileData.ref.getDownloadURL().then(function (_imageUrl) {\n            imageUrl = _imageUrl\n            return imageUrl\n          })\n        })\n        .then(imageUrl => {\n          return firebase.database().ref('meetups').child(key).update({ imageUrl: imageUrl })\n        })\n        .then(() => {\n          commit('createMeetup', {\n            ...meetup,\n            imageUrl: imageUrl,\n            id: key\n          })\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    },\n    updateMeetup ({ commit }, payload) {\n      commit('setLoading', true)\n      const updateObj = {}\n      if (payload.title) {\n        updateObj.title = payload.title\n      }\n      if (payload.description) {\n        updateObj.description = payload.description\n      }\n      if (payload.date) {\n        updateObj.date = payload.date\n      }\n      firebase.database().ref('meetups').child(payload.id).update(updateObj)\n        .then(() => {\n          commit('setLoading', false)\n          commit('updateMeetup', payload)\n        })\n        .catch(error => {\n          console.log(error)\n          commit('setLoading', false)\n        })\n    },\n    deleteMeetup ({ commit }, payload) {\n      commit('setLoading', true)\n\n      firebase.database().ref('meetups').child(payload)\n        .remove()\n        .then(() => {\n          commit('setLoading', false)\n          commit('deleteMeetup', payload)\n        })\n        .catch(error => {\n          console.log(error)\n          commit('setLoading', false)\n        })\n    }\n  },\n  getters: {\n    loadedMeetups (state) {\n      return state.loadedMeetups.sort((meetupA, meetupB) => {\n        return meetupA.date > meetupB.date\n      })\n    },\n    featuredMeetups (state, getters) {\n      return getters.loadedMeetups.slice(0, 5)\n    },\n    loadedMeetup (state) {\n      return (meetupId) => {\n        return state.loadedMeetups.find((meetup) => {\n          return meetup.id === meetupId\n        })\n      }\n    }\n  }\n}\n"]}]}