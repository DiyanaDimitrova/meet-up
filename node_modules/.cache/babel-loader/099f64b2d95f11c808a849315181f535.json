{"remainingRequest":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js!/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diyana.dimitrova/learning/meet-up/src/components/User/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diyana.dimitrova/learning/meet-up/src/components/User/Signup.vue","mtime":1563351979374},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/diyana.dimitrova/learning/meet-up/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  },\n  computed: {\n    comparePasswords: function comparePasswords() {\n      return this.password !== this.confirmPassword ? 'Passwords do not match' : '';\n    },\n    user: function user() {\n      return this.$store.getters.user;\n    },\n    error: function error() {\n      return this.$store.getters.error;\n    },\n    loading: function loading() {\n      return this.$store.getters.loading;\n    }\n  },\n  watch: {\n    user: function user(value) {\n      if (value !== null && value !== undefined) {\n        this.$router.push('/');\n      }\n    }\n  },\n  methods: {\n    onSignup: function onSignup() {\n      this.$store.dispatch('signUserUp', {\n        email: this.email,\n        password: this.password\n      });\n    },\n    onDismissed: function onDismissed() {\n      this.$store.dispatch('clearError');\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,eAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,KAAA,QAAA,KAAA,KAAA,eAAA,GAAA,wBAAA,GAAA,EAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA;AAZA,GARA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,gBACA,KADA,EACA;AACA,UAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AALA,GAtBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AAAA,QAAA,KAAA,EAAA,KAAA,KAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA;AANA;AA7BA,CAAA","sourcesContent":["<template>\n  <v-container>\n    <v-layout row v-if=\"error\">\n        <v-flex xs12 sm6 offset-sm3>\n            <app-alert @dismissed=\"onDismissed\" :text=\"error.message\"></app-alert>\n        </v-flex>\n    </v-layout>\n    <v-layout row>\n        <v-flex xs12 sm6 offset-sm3>\n            <v-card>\n            <v-card-text>\n                <v-container>\n                <form @submit.prevent=\"onSignup\">\n                    <v-layout row>\n                    <v-flex xs12>\n                        <v-text-field\n                            name=\"email\"\n                            label=\"Mail\"\n                            id=\"email\"\n                            v-model=\"email\"\n                            type=\"email\"\n                            required></v-text-field>\n                    </v-flex>\n                    </v-layout>\n                    <v-layout row>\n                    <v-flex xs12>\n                        <v-text-field\n                            name=\"password\"\n                            label=\"Password\"\n                            id=\"password\"\n                            v-model=\"password\"\n                            type=\"password\"\n                            required></v-text-field>\n                    </v-flex>\n                    </v-layout>\n                    <v-layout row>\n                    <v-flex xs12>\n                        <v-text-field\n                            name=\"confirmPassword\"\n                            label=\"Confirm Password\"\n                            id=\"confirmPassword\"\n                            v-model=\"confirmPassword\"\n                            type=\"password\"\n                            :rules=\"[comparePasswords]\"></v-text-field>\n                    </v-flex>\n                    </v-layout>\n                    <v-layout row>\n                    <v-flex xs12>\n                        <v-btn type=\"submit\" :disabled=\"loading\" :loading=\"loading\">\n                            Sign up\n                            <span slot=\"loader\" class=\"custom-loader\">\n                            <v-icon light>cached</v-icon>\n                        </span>\n                        </v-btn>\n                    </v-flex>\n                    </v-layout>\n                </form>\n                </v-container>\n            </v-card-text>\n            </v-card>\n        </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }\n  },\n  computed: {\n    comparePasswords () {\n      return this.password !== this.confirmPassword ? 'Passwords do not match' : ''\n    },\n    user () {\n      return this.$store.getters.user\n    },\n    error () {\n      return this.$store.getters.error\n    },\n    loading () {\n      return this.$store.getters.loading\n    }\n  },\n  watch: {\n    user (value) {\n      if (value !== null && value !== undefined) {\n        this.$router.push('/')\n      }\n    }\n  },\n  methods: {\n    onSignup () {\n      this.$store.dispatch('signUserUp', { email: this.email, password: this.password })\n    },\n    onDismissed () {\n      this.$store.dispatch('clearError')\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/User"}]}